# Generated by Django 5.2.5 on 2025-08-30 07:07

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('chat', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='dataset',
            name='api_key',
            field=models.CharField(blank=True, help_text='API key or authentication', max_length=500, null=True),
        ),
        migrations.AddField(
            model_name='dataset',
            name='api_url',
            field=models.URLField(blank=True, help_text='API endpoint URL', null=True),
        ),
        migrations.AddField(
            model_name='dataset',
            name='dataset_source',
            field=models.CharField(choices=[('file', 'File Upload (CSV/Excel)'), ('database', 'Database Connection'), ('api', 'API Endpoint'), ('external_link', 'External Link')], default='file', max_length=20),
        ),
        migrations.AddField(
            model_name='dataset',
            name='db_host',
            field=models.CharField(blank=True, help_text='Database host/connection string', max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='dataset',
            name='db_name',
            field=models.CharField(blank=True, help_text='Database name', max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='dataset',
            name='db_password',
            field=models.CharField(blank=True, help_text='Database password (encrypted)', max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='dataset',
            name='db_port',
            field=models.IntegerField(blank=True, help_text='Database port', null=True),
        ),
        migrations.AddField(
            model_name='dataset',
            name='db_query',
            field=models.TextField(blank=True, help_text='SQL query or table reference', null=True),
        ),
        migrations.AddField(
            model_name='dataset',
            name='db_table',
            field=models.CharField(blank=True, help_text='Table name or query', max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='dataset',
            name='db_type',
            field=models.CharField(blank=True, help_text='Database type (PostgreSQL, MySQL, SQLite, etc.)', max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='dataset',
            name='db_username',
            field=models.CharField(blank=True, help_text='Database username', max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='dataset',
            name='external_url',
            field=models.URLField(blank=True, help_text='External data source URL', null=True),
        ),
        migrations.AddField(
            model_name='dataset',
            name='last_sync',
            field=models.DateTimeField(blank=True, help_text='Last time data was synced from source', null=True),
        ),
        migrations.AddField(
            model_name='dataset',
            name='sync_frequency',
            field=models.CharField(choices=[('manual', 'Manual'), ('hourly', 'Hourly'), ('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly')], default='manual', max_length=20),
        ),
        migrations.AddField(
            model_name='datasetaccesslog',
            name='error_message',
            field=models.TextField(blank=True, help_text='Error message if access failed'),
        ),
        migrations.AlterField(
            model_name='dataset',
            name='csv_file',
            field=models.FileField(blank=True, help_text='Upload CSV/Excel file', null=True, upload_to='datasets/'),
        ),
        migrations.AlterField(
            model_name='dataset',
            name='status',
            field=models.CharField(choices=[('active', 'Active'), ('archived', 'Archived'), ('processing', 'Processing'), ('error', 'Error'), ('connecting', 'Connecting')], default='processing', max_length=20),
        ),
        migrations.AlterField(
            model_name='datasetaccesslog',
            name='access_type',
            field=models.CharField(choices=[('view', 'Viewed'), ('query', 'Queried'), ('download', 'Downloaded'), ('share', 'Shared'), ('sync', 'Synced'), ('error', 'Error')], max_length=20),
        ),
        migrations.CreateModel(
            name='DatabaseConnection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name for this database connection', max_length=200)),
                ('description', models.TextField(help_text='Description of the database')),
                ('db_type', models.CharField(choices=[('postgresql', 'PostgreSQL'), ('mysql', 'MySQL'), ('sqlite', 'SQLite'), ('oracle', 'Oracle'), ('sqlserver', 'SQL Server'), ('mongodb', 'MongoDB'), ('other', 'Other')], max_length=50)),
                ('db_host', models.CharField(help_text='Database host or connection string', max_length=255)),
                ('db_name', models.CharField(help_text='Database name', max_length=255)),
                ('db_port', models.IntegerField(blank=True, help_text='Database port', null=True)),
                ('db_username', models.CharField(help_text='Database username', max_length=255)),
                ('db_password', models.CharField(help_text='Database password (encrypted)', max_length=255)),
                ('use_ssl', models.BooleanField(default=False, help_text='Use SSL connection')),
                ('connection_timeout', models.IntegerField(default=30, help_text='Connection timeout in seconds')),
                ('max_connections', models.IntegerField(default=10, help_text='Maximum number of connections')),
                ('is_public', models.BooleanField(default=False, help_text='Whether this connection is public')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_tested', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this connection is active')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='database_connections', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Database Connection',
                'verbose_name_plural': 'Database Connections',
                'ordering': ['-created_at'],
            },
        ),
    ]
